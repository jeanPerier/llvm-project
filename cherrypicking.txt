How to cherry-pick commits from llvm-project:

# Create a branch $BRANCH of f18-stage on gitlab
# Clone f18-stage from gitlab
git clone ssh://git@gitlab-master.nvidia.com:12051/fortran/f18-stage.git $DIRECTORY
cd $DIRECTORY
# Add llvm/llvm-project as a remote repository
git remote add llvm-project https://github.com/llvm/llvm-project.git
git fetch llvm-project
git checkout $BRANCH
# If you want to see which files have diverged, do:
git diff --name-status refs/remotes/llvm-project/master HEAD -- flang
# Look for new flang commits since the latest (top) entry in the log below.
git log llvm-project/master -- flang >log.tmp
$EDITOR log.tmp
# Add them to the log below, marking them as NOT PICKED YET or
# NOT PICKED (if you think it should not be).
# For each commit that you want to pick,
$EDITOR cherrypicking.txt
git cherry-pick -x $COMMIT
# Build and test.  If successful, mark the newly picked commits
# as PICKED in the log below.
$EDITOR cherrypicking.txt
git add cherrypicking.txt
git commit -m '...'
git push
# Create a merge request for your branch.

Log of commits cherry-picked (or not) from llvm-project:

commit 4ced7a48e68a89257ee3c58a460d1bcdbf1e9447
Author: Tim Keith <tkeith@nvidia.com>
Date:   Thu Apr 23 09:14:58 2020 -0700

    [flang] Remove unused variable
    
    Reviewers: sscalpone, jdoerfert, DavidTruby
    
    Reviewed By: sscalpone
    
    Subscribers: llvm-commits
    
    Tags: #flang, #llvm
    
    Differential Revision: https://reviews.llvm.org/D78725

commit 9623003e9380e649bff0ebee3f11903ccf75af12
Author: Tim Keith <tkeith@nvidia.com>
Date:   Wed Apr 22 15:26:29 2020 -0700

    [flang][NFC] Refactor derived type instantiation
    
    Summary:
    Move InstantiateComponent and InstantiateIntrinsicType from symbol.cpp
    to type.cpp as that is where they are called.
    
    Put both in InstantiateHelper class to better isolate them.
    Add CreateDerivedTypeSpec in InstantiateHelper.
    
    Add non-const forms for AsIntrinsic and AsDerived to avoid const_cast.
    
    No functional changes.
    
    Reviewers: DavidTruby, klausler, PeteSteinfeld, jdoerfert
    
    Reviewed By: klausler
    
    Subscribers: llvm-commits
    
    Tags: #flang, #llvm
    
    Differential Revision: https://reviews.llvm.org/D78678

commit 026d8807f439754d0ac8e600c1c40538b1a16f02
Author: Tim Keith <tkeith@nvidia.com>
Date:   Wed Apr 22 16:19:38 2020 -0700

    [flang] Add missing check for unresolved name
    
    Summary:
    The name in an InputItem isn't necessarily resolved if an error occurred,
    so it needs to be checked.
    
    Fixes https://bugs.llvm.org/show_bug.cgi?id=45477
    
    Reviewers: klausler, PeteSteinfeld, DavidTruby, jdoerfert, sscalpone
    
    Reviewed By: klausler, sscalpone
    
    Subscribers: llvm-commits
    
    Tags: #llvm, #flang
    
    Differential Revision: https://reviews.llvm.org/D78685

commit a6c1692cb30e62c94513c2c6262cd76df92ef892
Author: Valentin Clement <clementv@ornl.gov>
Date:   Tue Apr 21 20:27:35 2020 +0100

    [Flang] fix dependency issues after D78215
    
    Patch D78215 changes various dependencies in the CMakeLists.txt. This
    results in error while compiling. This patch fixes the issue.
    
    Reviewers: DavidTruby
    
    Differential Revision: https://reviews.llvm.org/D78340

commit 0535fab2375ef71302bc0cf8e5d2ee3280b81f7d
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue Apr 21 14:32:57 2020 +0200

    [Flang][test] Don't set PATH in flang/test/Semantics/common.sh
    
    Currently, many `Flang :: Semantics` tests FAIL on Solaris.  The failure
    mode is always the same:
    
      actual at 67: Name in ALLOCATE statement must be a variable name
      expect at 67: ERROR: Name in ALLOCATE statement must be a variable name
    
    It turns out the issue is twofold here:
    
    - The awk script embedded in `flang/test/Semantics/common.sh` uses a string
      value for `FS`, which isn't supported by traditional awk as documented in
      the GNU autoconf manual.
    
    - Even though /usr/gnu/bin (with gawk installed as awk) is in my build
      environment's `PATH`, still /bin/awk is used
    
    Although the proper fix would probably be to avoid the unportability, it's
    easy to work around it for now.  `common.sh` above is the only script in
    the whole tree that for unknown reasons overrides `PATH` to
    `/usr/bin:/bin`, unnecessarily creating this mess in the first place.  Just
    removing that setting easily avoids the issue.
    
    Tested on `amd64-pc-solaris2.11` and `sparcv9-sun-solaris2.11`.
    
    Differential Revision: https://reviews.llvm.org/D78550

commit c1c01212c49a0792c0594662db84be271e29cba6 PICKED
Author: Anchu Rajendran <asudhaku@amd.com>
Date:   Sat Apr 18 11:39:34 2020 +0530

    [flang]Implemented Semantic Checkes for 5 data constraints
    
    Summary:
     C874, C875, C878, C880 and C881 checks are implemented.
    
    Differential Revision: https://reviews.llvm.org/D78008

commit 2d6b9dbfef55364fc762682cd8ab93045582944a PICKED
Author: Mehdi Chinoune <chinoune.mehdi@hotmail.com>
Date:   Thu Apr 16 13:34:17 2020 +0100

    [flang] Use the Flang cmake-functions to add targets.
    
    Summary: It also removes the cycle-dependency between FortranSemantics and FortranEvaluate.
    
    Reviewers: #flang, jdoerfert, sscalpone
    
    Reviewed By: #flang, sscalpone
    
    Subscribers: DavidTruby, schweitz, tskeith, mgorny, aartbik, llvm-commits
    
    Tags: #flang, #llvm
    
    Differential Revision: https://reviews.llvm.org/D78215

commit 29e71ceaee1a7a27d194100f0d94eb4d49496529 PICKED
Author: David Truby <david.truby@arm.com>
Date:   Wed Apr 15 12:55:42 2020 +0100

    [flang] Add return statement to Logical opeator=.
    
    This removes the current undefined behavior where the function has a return type
    but no return statement.
    
    Fixes: https://bugs.llvm.org/show_bug.cgi?id=45530

commit ebf190fcda0b8b4e9de405ba13ddbc679550644b PICKED
Author: River Riddle <riddleriver@gmail.com>
Date:   Tue Apr 14 14:53:50 2020 -0700

    [llvm][ADT] Move TypeSwitch class from MLIR to LLVM
    
    This class implements a switch-like dispatch statement for a value of 'T' using dyn_cast functionality. Each `Case<T>` takes a callable to be invoked if the root value isa<T>, the callable is invoked with the result of dyn_cast<T>() as a parameter.
    
    Differential Revision: https://reviews.llvm.org/D78070

commit 2f21a579665d44330b964cb47eece8bb9ab5a90c PICKED
Author: River Riddle <riddleriver@gmail.com>
Date:   Tue Apr 14 14:53:28 2020 -0700

    [llvm][STLExtras] Move the algorithm `interleave*` methods from MLIR to LLVM
    
    These have proved incredibly useful for interleaving values between a range w.r.t to streams. After this revision, the mlir/Support/STLExtras.h is empty. A followup revision will remove it from the tree.
    
    Differential Revision: https://reviews.llvm.org/D78067

commit d58a405de656e53424086aa4ab97db56d43deb36 PICKED
Author: Eric Schweitz <eschweitz@nvidia.com>
Date:   Tue Apr 14 09:50:50 2020 -0700

    [flang] Upstream patch to enable the fir-ops test. bug 45487
    
    Differential revision: https://reviews.llvm.org/D77834

commit ed6c452edc8121e18ec977a4ac93ab43d95fe78d PICKED
Author: Mehdi Amini <joker.eph@gmail.com>
Date:   Mon Apr 13 17:03:12 2020 +0000

    Add missing dependencies on the flang test target
    
    Without this, the LLVM utilities (FileCheck) aren't built when running
    `ninja check-flang` and it fails with:
    
    llvm-project/llvm/utils/lit/lit/llvm/subst.py:134: fatal: Did not find FileCheck in...
    
    Also the modules aren't built without depending on `module_files`, which
    makes multiple tests failing.
    
    Differential Revision: https://reviews.llvm.org/D78036

commit 413467f9ec3d2e10585ddd171cb54114f97d01c8 PICKED
Author: David Truby <david.truby@arm.com>
Date:   Thu Apr 9 21:12:54 2020 +0100

    [flang] [NFC] Adjust README.md for upstreaming.
    
    This changes the references and build instructions for Flang so that
    they are correct now that F18 has been rechristened Flang and merged
    with LLVM.
    
    Reviewed at: https://github.com/flang-compiler/f18/pull/909

commit 89c7d9633b3f2255ed711522f29751566a6f5d70 NOT PICKED
Author: David Truby <david.truby@arm.com>
Date:   Thu Apr 9 18:35:49 2020 +0100

    [flang] Temporarily XFAIL failing test Fir/fir-ops.fir

commit a1726e65bc1fdbd2800839e48e68cb4a68cc7092 NOT PICKED
Author: David Truby <david.truby@arm.com>
Date:   Thu Apr 9 16:39:18 2020 +0100

    [flang] Add dependency on libSemantics to libEvaluate.
    
    When building flang with LLVM HEAD, the unittests fail to link with ld.bfd or
    ld.gold due to a linker ordering issue. Adding libSemantics as a dependency to
    libEvaluate seems to fix that issue.
    
    Reviewed at: https://github.com/flang-compiler/f18/pull/1104
